define host_start
    execute_operation operation: 'cloudify.interfaces.lifecycle.start'
    wait_for_host_to_start

    sequence if: '${node.properties.install_agent} == true'
        log message: 'installing agent on host: ${node.id}'
        event event: { "stage" => "Installing worker" }
        execute_operation operation: 'cloudify.interfaces.worker_installer.install'
        execute_operation operation: 'cloudify.interfaces.worker_installer.start'
        event event: { "stage" => "Installing plugins" }
        log message: 'installing plugins on host: ${node.id} - plugins: ${node.plugins_to_install}'
        iterator on: '$node.plugins_to_install', to_v: 'plugin'
            log message: 'installing plugin: ${v:plugin.name} on host: ${node.id}'
            event event: { "stage" => "Installing plugin ${v:plugin.name}" }
            execute_operation operation: 'cloudify.interfaces.plugin_installer.install', params: {
                plugin: {
                    name: '${v:plugin.name}',
                    url: '${v:plugin.url}'
                 }
            }
            log message: 'successfully installed plugin: ${v:plugin.name} on host: ${node.id}'
        log message: 'restarting worker on host: ${node.id}'
        execute_operation operation: 'cloudify.interfaces.worker_installer.restart'

    state action: 'set', node_id: '${node.id}', value: 'started'

    define wait_for_host_to_start
        repeat
            execute_operation operation: 'cloudify.interfaces.host.get_state', to_f: 'host_state'
            break if: '${host_state} == True'
            wait for: '5s'

