define uninstall_deployment

    set 'v:plan': '$f:plan'
    plan_helper do: 'modify_and_save_plan'
    unset 'f:plan'

    log message: 'uninstalling nodes: ${v:plan.nodes}'
    concurrent_iterator on: '$v:plan.nodes', to_f: 'node', merge_type: 'ignore'
        log message: 'processing node: ${node.id}'
        # wait for all dependents to be uninstalled first
        iterator on: '$f:node.dependents', to_v: 'dependent'
            log message: 'waiting for node: ${node.id} dependent: ${v:dependent}'
            state action: 'wait', node_id: '${v:dependent}', reachable: 'false'
        unset 'v:dependent'

        state action: 'get', node_id: '${node.id}', to_f: 'node_reachable'
        log message: 'node reachable state is: ${node_reachable}'
        # we only call uninstall on reachable nodes
        sequence if: '${node_reachable} == true'
            event event: { "stage" => "Stopping node" }
            log message: 'executing stop workflow for node: ${node.id}'

            # 'stop' is a Ruote reserved word so therefore '_stop'
            set 'v:_stop': "$f:node.workflows.stop"
            _stop
            unset 'v:_stop'

            execute_relationships_workflow workflow: 'unlink'

            event event: { "stage" => "Deleting node" }
            log message: 'executing delete workflow for node: ${node.id}'
            set 'v:delete': "$f:node.workflows.delete"
            delete
            unset 'v:delete'

            state action: 'wait', node_id: '${node.id}', reachable: 'false'

