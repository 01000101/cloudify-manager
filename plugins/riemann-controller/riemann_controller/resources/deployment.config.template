(amqp-queue-consumer "{{ctx.deployment.id}}-riemann" "{{ctx.deployment.id}}")

(periodically-expire 5 {:keep-keys [:node_id :node_name :host :service]})

{% for trigger_name, trigger in policy_triggers.iteritems()  %}

(register-policy-trigger "{{ctx.deployment.id}}" "{{trigger_name}}"
{{trigger.source}})

{% endfor %}

(let [index (index)
      deployment-processing-queue
        (processing-queue "{{ctx.deployment.id}}" {:queue-size     1000
                                                   :core-pool-size 1
                                                   :max-pool-size  4})]
(streams

(default :ttl 60 index)

{% for stream in streams %}
; group={{stream.metadata.group}}
; policy={{stream.metadata.policy}}
; policy_type={{stream.metadata.policy_type}}
; members={{stream.metadata.members | join(", ")}}
(let [process-policy-triggers
        (process-policy-triggers-stream "{{ctx.blueprint.id}}"
                                        "{{ctx.deployment.id}}"
                                        "{{stream.metadata.group}}"
                                        "{{stream.metadata.policy}}"
                                        deployment-processing-queue)
      publish-policy-event
        (publish-policy-event* "{{ctx.blueprint.id}}"
                               "{{ctx.deployment.id}}"
                               "{{stream.metadata.group}}"
                               "{{stream.metadata.policy}}")
      publish-policy-error
        (publish-policy-error* "{{ctx.blueprint.id}}"
                               "{{ctx.deployment.id}}"
                               "{{stream.metadata.group}}"
                               "{{stream.metadata.policy}}")
      publish-log
        (publish-log* "{{ctx.blueprint.id}}"
                      "{{ctx.deployment.id}}"
                      "{{stream.metadata.group}}"
                      "{{stream.metadata.policy}}")]
(where* (is-node-name-in {%for m in stream.metadata.members%}"{{m}}" {%endfor%})
(exception-stream publish-policy-error
{{stream.data}})))
{% endfor %}))
