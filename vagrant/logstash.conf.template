input {
    stdin {
        type => "stdin-type"
    }

    file {
        type => "cosmo-log"
        path => "$cosmo_log_file"
    }
}

filter {
    if [message] =~ "^[\s\t\n]*$" {
        drop { }
    } else if [message] =~ "^.*prepare_multi_instance_plan" {
        drop { }
    } else if [message] =~ "^.*Workflow has been executed successfully" {
        drop { }
    }
}

filter {
    json {
        source => "message"
    }
}

filter {
    if [type] == "task_received" {
        drop { }
    } else if [type] == "task_started" {
        drop { }
    } else if [type] == "plugin_execution" {
        if [name] == "openstack_host_provisioner" and [message] =~ "^.*Starting machine" {
            mutate {
                add_field => [ "description", "OpenStack plugin: %{message}" ]
            }
        } else {
            drop { }
        }
    } else if [type] == "sending_task" {
        if [node] =~ "^.+" {
            mutate {
                add_field => [ "description", "Executing task: '%{name}' for node: '%{node}' using '%{plugin}' plugin" ]
            }
        } else {
            mutate {
                add_field => [ "description", "Executing management task: '%{name}' using '%{plugin}' plugin" ]
            }
        }        
    } else if [type] == "task_failed" {
        if [node] =~ "^.+" {
            mutate {
                add_field => [ "description", "Execution failed for task: '%{name}' for node: '%{node}' using '%{plugin}' plugin" ]
            }
        } else {
            mutate {
                add_field => [ "description", "Execution failed for management task: '%{name}' using '%{plugin}' plugin" ]
            }
        }        
    } else if [type] == "task_succeeded" {
        if [node] =~ "^.+" {
            mutate {
                add_field => [ "description", "Execution succeeded for task: '%{name}' for node: '%{node}' using '%{plugin}' plugin" ]
            }
        } else {
            mutate {
                add_field => [ "description", "Execution succeeded for task: '%{name}' using '%{plugin}' plugin" ]
            }
        }        
    } else if [type] == "workflow_stage" {
        if [node] =~ "^.+" {
            mutate {
                add_field => [ "description", "%{stage} [blueprint=%{blueprint}, node=%{node}, workflow=%{workflow_name}]" ]
            }
        } else {
            if [blueprint] =~ "^.+" {
                mutate {
                    add_field => [ "description", "%{stage} [blueprint=%{blueprint}, workflow=%{workflow_name}]" ]
                }
            } else {
                mutate {
                    add_field => [ "description", "%{stage} [workflow=%{workflow_name}]" ]
                }
            }
        }
    } else if [type] == "policy" {
        if [message] =~ "^.*state has changed to (\d+)\.(\d+)\.(\d+)\.(\d+)" {
            drop { }
        } else {
            mutate {
                add_field => [ "description", "Node: '%{node}' has been started successfully" ]
            }
        }
    }
}

output {
    #stdout { debug => true codec => "json" }
    elasticsearch { embedded => true }
}
