import org.cloudifysource.cosmo.monitor.mock.MonitoringMessage
import org.cloudifysource.cosmo.monitor.mock.AppInfo
import org.cloudifysource.cosmo.monitor.mock.MonitoringMessage

declare MonitoringMessage
@role(event)
@timestamp(timestamp)
end

declare AppInfo
@role(event)
@timestamp(timestamp.getTime())
end

rule "Change message type after one minute"
    dialect "mvel"
when
    $appinfo:AppInfo()
    $message:MonitoringMessage( type == "before", $msgtext : msgtext, this after[ 1m ] $appinfo )
then
    System.out.println( $msgtext );
    $message.type = "after";
    channels["output"].send( $message );
end

rule "Create new message if not exits within 1 minute"
    dialect "mvel"
when
    $request: MonitoringMessage( type == "request")
    not MonitoringMessage( type == "response", this after[0, 1m ] $request )
then
    System.out.println( "Found no response.");
    $message = new org.cloudifysource.cosmo.monitor.mock.MonitoringMessage()
    $message.type = "missing";
    $message.msgtext = "This is the message text";
    channels["output"].send( $message );
end