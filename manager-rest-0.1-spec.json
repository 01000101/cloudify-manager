{"swaggerVersion": "1.2", "apis": [{"operations": [{"parameters": [], "responseClass": "List[BlueprintState]", "notes": "Returns a list a submitted blueprints.", "summary": "Returns a list of submitted blueprints.", "nickname": "list", "method": "GET"}, {"parameters": [{"defaultValue": "blueprint.yaml", "name": "application_file_name", "dataType": "string", "allowMultiple": false, "required": false, "paramType": "query", "description": "File name of yaml containing the \"main\" blueprint."}, {"name": "body", "dataType": "binary", "allowMultiple": false, "required": true, "paramType": "body", "description": "Binary form of the tar gzipped blueprint directory"}], "responseClass": "BlueprintState", "notes": "Submitted blueprint should be a tar gzipped directory containing the blueprint.", "consumes": ["application/octet-stream"], "summary": "Submit a new blueprint.", "nickname": "upload", "method": "POST"}], "path": "/blueprints", "description": null}, {"operations": [{"parameters": [{"dataType": "string", "paramType": "path", "name": "blueprint_id"}], "responseClass": "BlueprintState", "notes": "deletes a blueprint by its id.", "summary": null, "nickname": "deleteById", "method": "DELETE"}, {"parameters": [{"dataType": "string", "paramType": "path", "name": "blueprint_id"}], "responseClass": "BlueprintState", "notes": "Returns a blueprint by its id.", "summary": "Returns a blueprint by its id.", "nickname": "getById", "method": "GET"}, {"parameters": [{"dataType": "string", "paramType": "path", "name": "blueprint_id"}, {"defaultValue": "blueprint.yaml", "name": "application_file_name", "dataType": "string", "allowMultiple": false, "required": false, "paramType": "query", "description": "File name of yaml containing the \"main\" blueprint."}, {"name": "body", "dataType": "binary", "allowMultiple": false, "required": true, "paramType": "body", "description": "Binary form of the tar gzipped blueprint directory"}], "responseClass": "BlueprintState", "notes": "Submitted blueprint should be a tar gzipped directory containing the blueprint.", "consumes": ["application/octet-stream"], "summary": "Submit a new blueprint with a blueprint_id.", "nickname": "upload", "method": "PUT"}], "path": "/blueprints/{blueprint_id}", "description": null}, {"operations": [{"notes": "Downloads blueprint as an archive.", "nickname": "getArchive", "method": "GET", "parameters": [{"dataType": "string", "paramType": "path", "name": "blueprint_id"}], "summary": null}], "path": "/blueprints/{blueprint_id}/archive", "description": null}, {"operations": [{"parameters": [{"dataType": "string", "paramType": "path", "name": "blueprint_id"}], "responseClass": "BlueprintState", "notes": "Returns a blueprint's source by the blueprint's id.", "summary": "Returns a blueprint by its id.", "nickname": "getBlueprintSource", "method": "GET"}], "path": "/blueprints/{blueprint_id}/source", "description": null}, {"operations": [{"parameters": [{"dataType": "string", "paramType": "path", "name": "blueprint_id"}], "responseClass": "BlueprintValidationStatus", "notes": "Validates a given blueprint.", "summary": "Validates a given blueprint.", "nickname": "validate", "method": "GET"}], "path": "/blueprints/{blueprint_id}/validate", "description": null}, {"operations": [{"parameters": [{"dataType": "string", "paramType": "path", "name": "execution_id"}], "responseClass": "Execution", "notes": "Returns the execution state by its id.", "summary": "Returns the execution state by its id.", "nickname": "getById", "method": "GET"}, {"parameters": [{"dataType": "string", "paramType": "path", "name": "execution_id"}, {"name": "status", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "body", "description": "The execution's new status"}, {"name": "error", "dataType": "string", "allowMultiple": false, "required": false, "paramType": "body", "description": "An error message. If omitted, error will be updated to an empty string"}], "responseClass": "Execution", "notes": "Updates the execution's status", "consumes": ["application/json"], "summary": "Updates an execution's status", "nickname": "updateExecutionStatus", "method": "PATCH"}, {"parameters": [{"dataType": "string", "paramType": "path", "name": "execution_id"}, {"name": "body", "dataType": "ModifyExecutionRequest", "allowMultiple": false, "required": true, "paramType": "body", "description": "json with an action key. Legal values for action are: [cancel]"}], "responseClass": "Execution", "notes": "Modifies a running execution state (currently, only cancel is supported)", "consumes": ["application/json"], "summary": "Modify a running execution state.", "nickname": "modify_state", "method": "POST"}], "path": "/executions/{execution_id}", "description": null}, {"operations": [{"parameters": [], "responseClass": "List[Deployment]", "notes": "Returns a list existing deployments.", "summary": "Returns a list of existing deployments.", "nickname": "list", "method": "GET"}], "path": "/deployments", "description": null}, {"operations": [{"parameters": [{"dataType": "string", "paramType": "path", "name": "deployment_id"}, {"paramType": "query", "name": "ignore_live_nodes", "dataType": "boolean", "allowMultiple": false, "required": false, "defaultValue": false, "description": "Specifies whether to ignore live nodes,or raise an error upon such nodes instead."}], "responseClass": "Deployment", "notes": "deletes a deployment by its id.", "summary": null, "nickname": "deleteById", "method": "DELETE"}, {"parameters": [{"dataType": "string", "paramType": "path", "name": "deployment_id"}], "responseClass": "Deployment", "notes": "Returns a deployment by its id.", "summary": "Returns a deployment by its id.", "nickname": "getById", "method": "GET"}, {"parameters": [{"dataType": "string", "paramType": "path", "name": "deployment_id"}, {"name": "body", "dataType": "DeploymentRequest", "allowMultiple": false, "required": true, "paramType": "body", "description": "Deployment blue print"}], "responseClass": "Deployment", "notes": "Created a new deployment of the given blueprint.", "consumes": ["application/json"], "summary": "Creates a new deployment", "nickname": "createDeployment", "method": "PUT"}], "path": "/deployments/{deployment_id}", "description": null}, {"operations": [{"parameters": [{"dataType": "string", "paramType": "path", "name": "deployment_id"}], "responseClass": "List[Execution]", "notes": "Returns a list of executions for the provided deployment.", "summary": "Returns a list of executions for the provided deployment.", "nickname": "list", "method": "GET"}, {"parameters": [{"dataType": "string", "paramType": "path", "name": "deployment_id"}, {"name": "body", "dataType": "ExecutionRequest", "allowMultiple": false, "required": true, "paramType": "body", "description": "Workflow execution request"}, {"paramType": "query", "name": "force", "dataType": "boolean", "allowMultiple": false, "required": false, "defaultValue": false, "description": "Specifies whether to force workflow execution even if there is an ongoing workflow executing for the same deployment"}], "responseClass": "Execution", "notes": "Executes the provided workflow under the given deployment context.", "consumes": ["application/json"], "summary": "Execute a workflow", "nickname": "execute", "method": "POST"}], "path": "/deployments/{deployment_id}/executions", "description": null}, {"operations": [{"parameters": [{"dataType": "string", "paramType": "path", "name": "deployment_id"}], "responseClass": "Workflows", "notes": "Returns a list of workflows related to the provided deployment.", "summary": "Returns a list of workflows related to the provided deployment.", "nickname": "workflows", "method": "GET"}], "path": "/deployments/{deployment_id}/workflows", "description": null}, {"operations": [{"parameters": [{"dataType": "string", "paramType": "path", "name": "deployment_id"}, {"paramType": "query", "name": "state", "dataType": "boolean", "allowMultiple": false, "required": false, "defaultValue": false, "description": "Specifies whether to return state for the nodes."}], "responseClass": "DeploymentNodes", "notes": "Returns an object containing nodes associated with this deployment.", "summary": "Returns an object containing nodes associated with this deployment.", "nickname": "list", "method": "GET"}], "path": "/deployments/{deployment_id}/nodes", "description": null}, {"operations": [{"parameters": [{"name": "node_id", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "path", "description": "Node Id"}, {"paramType": "query", "name": "state_and_runtime_properties", "dataType": "boolean", "allowMultiple": false, "required": false, "defaultValue": true, "description": "Specifies whether to return state and runtime properties"}], "responseClass": "DeploymentNode", "notes": "Returns node state/runtime properties according to the provided query parameters.", "summary": "Gets node runtime or state.", "nickname": "getNodeInstance", "method": "GET"}, {"parameters": [{"name": "node_id", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "path", "description": "Node Id"}, {"name": "state_version", "dataType": "int", "allowMultiple": false, "required": true, "paramType": "body", "description": "used for optimistic locking during update"}, {"name": "runtime_properties", "dataType": "dict", "allowMultiple": false, "required": false, "paramType": "body", "description": "a dictionary of runtime properties. If omitted, the runtime properties wont be updated"}, {"name": "state", "dataType": "string", "allowMultiple": false, "required": false, "paramType": "body", "description": "the new node's state. If omitted, the state wont be updated"}], "responseClass": "DeploymentNode", "notes": "Update node runtime state. Expecting the request body to be a dictionary containing 'state_version' which is used for optimistic locking during the update, and optionally 'runtime_info' (dictionary) and/or 'state' (string) properties", "consumes": ["application/json"], "summary": "Updates node instance", "nickname": "patchNodeState", "method": "PATCH"}, {"parameters": [{"name": "node_id", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "path", "description": "Node Id"}], "responseClass": "DeploymentNode", "notes": "Put node instance", "summary": "Puts node instance.", "nickname": "putNodeInstance", "method": "PUT"}], "path": "/nodes/{node_id}", "description": null}, {"operations": [{"parameters": [{"name": "body", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "body", "description": "ElasticSearch query."}], "notes": "Returns a list of events for the provided ElasticSearch query. The response format is as ElasticSearch response format.", "method": "GET", "summary": "Returns events for the provided ElasticSearch query", "nickname": "events", "consumes": ["application/json"]}, {"parameters": [{"name": "body", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "body", "description": "ElasticSearch query."}], "notes": "Returns a list of events for the provided ElasticSearch query. The response format is as ElasticSearch response format.", "method": "POST", "summary": "Returns events for the provided ElasticSearch query", "nickname": "events", "consumes": ["application/json"]}], "path": "/events", "description": null}, {"operations": [{"parameters": [{"name": "body", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "body", "description": "ElasticSearch query."}], "notes": "Returns results from the storage for the provided ElasticSearch query. The response format is as ElasticSearch response format.", "method": "POST", "summary": "Returns results for the provided ElasticSearch query", "nickname": "search", "consumes": ["application/json"]}], "path": "/search", "description": null}, {"operations": [{"parameters": [], "responseClass": "Status", "notes": "Returns state of running system services", "summary": "Returns state of running system services", "nickname": "status", "method": "GET"}], "path": "/status", "description": null}, {"operations": [{"parameters": [], "responseClass": "ProviderContext", "notes": "Get the provider context", "summary": "Get the provider context.", "nickname": "getContext", "method": "GET"}, {"parameters": [{"name": "body", "dataType": "PostProviderContextRequest", "allowMultiple": false, "required": true, "paramType": "body", "description": "Provider context"}], "responseClass": "ProviderContextPostStatus", "notes": "Post the provider context", "consumes": ["application/json"], "summary": "Post the provider context", "nickname": "postContext", "method": "POST"}], "path": "/provider/context", "description": null}], "models": {"Status": {"properties": {"status": {"type": "string"}, "services": {"type": "null"}}, "id": "Status", "description": null}, "Execution": {"properties": {"status": {"type": "string"}, "workflowId": {"type": "string"}, "deploymentId": {"type": "string"}, "error": {"type": "string"}, "blueprintId": {"type": "string"}, "id": {"type": "string"}, "createdAt": {"type": "string"}}, "id": "Execution", "description": null}, "Workflow": {"properties": {"name": {"type": "string"}, "createdAt": {"type": "string"}}, "id": "Workflow", "description": null}, "ProviderContextPostStatus": {"properties": {"status": {"type": "string"}}, "id": "ProviderContextPostStatus", "description": null}, "Deployment": {"properties": {"blueprintId": {"type": "string"}, "updatedAt": {"type": "string"}, "plan": {"type": "null"}, "createdAt": {"type": "string"}, "id": {"type": "string"}}, "id": "Deployment", "description": null}, "DeploymentNodes": {"properties": {"deploymentId": {"type": "string"}, "nodes": {"items": {"$ref": "DeploymentNode"}, "type": "array"}}, "id": "DeploymentNodes", "description": null}, "ModifyExecutionRequest": {"properties": {"action": {"type": "string"}}, "id": "ModifyExecutionRequest", "description": null}, "DeploymentRequest": {"properties": {"blueprintId": {"type": "string"}}, "id": "DeploymentRequest", "description": null}, "DeploymentNode": {"properties": {"stateVersion": {"type": "null"}, "state": {"type": "string"}, "runtimeInfo": {"type": "null"}, "id": {"type": "string"}}, "id": "DeploymentNode", "description": null}, "ProviderContext": {"properties": {"name": {"type": "string"}, "context": {"type": "null"}}, "id": "ProviderContext", "description": null}, "PostProviderContextRequest": {"properties": {"name": {"type": "string"}, "context": {"type": "null"}}, "id": "PostProviderContextRequest", "description": null}, "Workflows": {"properties": {"blueprintId": {"type": "string"}, "deploymentId": {"type": "string"}, "workflows": {"items": {"$ref": "Workflow"}, "type": "array"}}, "id": "Workflows", "description": null}, "ExecutionRequest": {"properties": {"workflowId": {"type": "string"}}, "id": "ExecutionRequest", "description": null}, "BlueprintState": {"properties": {"source": {"type": "null"}, "plan": {"type": "null"}, "id": {"type": "string"}, "createdAt": {"type": "string"}, "updatedAt": {"type": "string"}}, "id": "BlueprintState", "description": null}, "BlueprintValidationStatus": {"properties": {"status": {"type": "string"}, "blueprintId": {"type": "string"}}, "id": "BlueprintValidationStatus", "description": null}}, "basePath": "http://localhost:8100", "produces": ["application/json"], "resourcePath": "/", "apiVersion": "0.1"}
