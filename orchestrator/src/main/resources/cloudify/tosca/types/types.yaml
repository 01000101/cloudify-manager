##################################################################################
# Auto imported:
##################################################################################
imports:
    - 'celery_worker_installer'
    - 'celery_plugin_installer'
    - 'cloudify.policies'

##################################################################################
# Base type definitions
##################################################################################
types:

    # A tier in a topology
    cloudify.tosca.types.tier: { }

    # A host (physical / virtual or LXC) in a topology
    cloudify.tosca.types.host:
        interfaces:
            - "cloudify.tosca.interfaces.host_provisioner"
            - "cloudify.tosca.interfaces.worker_installer"
            - "cloudify.tosca.interfaces.plugin_installer"
        properties:
            install_agent: 'false'
        workflows:
            init:
                ref: "cloudify.workflows.host.init"

    # A storage volume in a topology
    cloudify.tosca.types.volume:
        interfaces:
            - "cloudify.tosca.interfaces.volume.volume_provisioner"

    # A storage Container (Object Store segment)
    cloudify.tosca.types.object_container:
        interfaces:
            - "cloudify.tosca.interfaces.object_container.container_provisioner"

    # An isolated virtual layer 2 domain or a logical / virtual switch
    cloudify.tosca.types.network:
        interfaces:
            - "cloudify.tosca.interfaces.network.network_provisioner"

    # A virtual Load Balancer
    cloudify.tosca.types.load_balancer:
        interfaces:
            - "cloudify.tosca.interfaces.load_balancer.lb_provisioner"

    # A virtual floating IP
    cloudify.tosca.types.virtual_ip:
        interfaces:
            - "cloudify.tosca.interfaces.virtual_ip.virtual_ip_provisioner"

    # A security group
    cloudify.tosca.types.security_group:
        interfaces:
            - "cloudify.tosca.interfaces.security_group.security_group_provisioner"

    # A middleware component in a topology
    cloudify.tosca.types.middleware_server:
        interfaces:
            - "cloudify.tosca.interfaces.middleware_component_installer"
            - "cloudify.tosca.interfaces.app_module_installer"
        workflows:
            init:
                ref: "cloudify.workflows.middleware_server.init"

    cloudify.tosca.types.db_server:
        derived_from: "cloudify.tosca.types.middleware_server"

    cloudify.tosca.types.web_server:
        derived_from: "cloudify.tosca.types.middleware_server"

    cloudify.tosca.types.app_server:
        derived_from: "cloudify.tosca.types.middleware_server"

    cloudify.tosca.types.message_bus_server:
        derived_from: "cloudify.tosca.types.middleware_server"

    # An application artifact to deploy
    cloudify.tosca.types.app_module:
        workflows:
            init:
                ref: "cloudify.workflows.app_module.init"


##################################################################################
# Base relationship definitions
##################################################################################
relationships:

    cloudify.tosca.relationships.depends_on:
        plugin: ""
        # valid values (when plugin is defined): pre_started, post_started
        bind_at: ""
        # valid values (when plugin is defined): source, target
        run_on_node: ""

    cloudify.tosca.relationships.connected_to:
        derived_from: "cloudify.tosca.relationships.depends_on"
        workflow:
            ref: "cloudify.workflows.connected_to"

        interface:
            name: "cloudify.tosca.interfaces.connection_configurer"
            operations:
                - "configure_connection"
                - "unconfigure_connection"

    cloudify.tosca.relationships.contained_in:
        derived_from: "cloudify.tosca.relationships.depends_on"


##################################################################################
# Base interface definitions
##################################################################################
interfaces:

    # provision and manage host lifecycle
    cloudify.tosca.interfaces.host_provisioner:
        operations:
            - "provision"
            - "terminate"
            - "start"
            - "pause"
            - "restart"

    # installs middleware components
    cloudify.tosca.interfaces.middleware_component_installer:
        operations:
            - "install"
            - "uninstall"
            - "start"
            - "stop"
            - "restart"

    cloudify.tosca.interfaces.app_module_installer:
        operations:
            - "deploy"
            - "undeploy"
            - "stop"
            - "start"

    # start and manage celery worker lifecycle
    cloudify.tosca.interfaces.worker_installer:
        operations:
            - "install"
            - "start"
            - "restart"

    # installs plugins on the agent host
    cloudify.tosca.interfaces.plugin_installer:
        operations:
            - "install"

    # provision and manage a storage volume
    cloudify.tosca.interfaces.volume.volume_provisioner:
        operations:
            - "create"
            - "delete"
            - "attach"
            - "detach"

    # provision and manage an object container
    cloudify.tosca.interfaces.object_container.container_provisioner:
        operations:
            - "create"
            - "delete"
            - "create_metadata"
            - "delete_metadata"
            - "update_metadata"

    # provision and manage virtual networks
    cloudify.tosca.interfaces.network.network_provisioner:
        operations:
            - "create"
            - "delete"
            - "create_subnet"
            - "delete_subnet"

    # provision and manage a virtual load balancer
    cloudify.tosca.interfaces.load_balancer.lb_provisioner:
        operations:
            - "create_device"
            - "delete_device"
            - "create_load_balancer"
            - "delete_load_balancer"
            - "update_load_balancer"
            - "create_node"
            - "delete_node"
            - "update_node"
            - "create_prob"
            - "delete_prob"
            - "update_prob"

    # provision and manage virtual ip
    cloudify.tosca.interfaces.virtual_ip.virtual_ip_provisioner:
        operations:
            - "create"
            - "delete"

    #provision and manage a security group
    cloudify.tosca.interfaces.security_group.security_group_provisioner:
        operations:
            - "create"
            - "delete"
            - "create_rule"
            - "delete_rule"


##################################################################################
# Workflows
##################################################################################
workflows:
    install:
        ref: "cloudify.workflows.install"

##################################################################################
# Base artifact definitions
##################################################################################
plugins:

    # Basic plugin artifact
    cloudify.tosca.artifacts.plugin: { }

    # Remote plugin artifact
    cloudify.tosca.artifacts.remote_plugin:
        derived_from: "cloudify.tosca.artifacts.plugin"

    # Worker plugin artifact - runs on Cloudify agent
    cloudify.tosca.artifacts.agent_plugin:
        derived_from: "cloudify.tosca.artifacts.plugin"

